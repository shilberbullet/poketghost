포켓요괴 설계파일 (최신화)

1. 게임의 배경
• 조선시대를 배경으로 요괴들이 창궐하여 혼란스러운 세계관.
• 요괴들이 창궐하여 날뛰며 백성들에게 해를 끼쳐 혼란스럽다

2. 게임의 목적
• 요괴들의 보스를 봉인하는 것이 주요 목적.
• 강한 동료 요괴 수집
• 동료 요괴 레벨 높여 강해지기

3. 세부 줄거리
• 주인공인 퇴마사는 육지와 떨어져 안전한 제주도에서 태어났다
• 어린 시절부터 친구였던 도깨비와 함께 조선 팔도를 어지럽히는 요괴들을 퇴치하기 위해 배를 타고 육지로 간다.
• 제주도 → 경상도/전라도 → 모든 지역 탐험 후 백두산 보스로 진행.
• 보스스테이지 전 지역에서 시공간을 초월해서온 요괴인 패러독스 요괴 등장
• 보스 스테이지에서 요괴들의 왕 두억시니와 조우
• 두억시니의 강력한 힘의 근원인 외계로부터 날아온 운석을 파괴한다
• 그후 두억시니를 봉인한다

4. 서브 목표
• 랜덤한 스테이지에서만 나오는 특수 이벤트를 해결한다 (우물신과의 조우, 배달 알바, 점성술사와 조우)
• 모든 요괴를 동료로 만들어 요괴도감을 완성한다

5. 아이템 시스템
• 회복형, 부적형, 귀속형, 양갱형, 경단형, 식혜형 아이템 존재
• 아이템의 희귀도는 평범/희귀/초희귀 3종류
• 회복형: 요괴의 hp 회복/기절 회복
• 부적형: 요괴를 동료로 만듦
• 귀속형: 요괴의 데미지/hp 등 변화
• 경단형: 특수효과 일회용
• 양갱형: 레벨업
• 식혜형: pp 회복
• 희귀도별 등장확률: 평범 70%, 희귀 25%, 초희귀 5%
• 보스스테이지는 회복형 아이템 없음

아이템목록
• 일반: 낡은부적, 제삿밥, 미지근한 식혜, 일반 양갱
• 희귀: 빳빳한 부적, 나물, 탕국, 지도, 시원한 식혜, 버섯죽, 이상한 양갱, 찹살경단
• 초희귀: 신비한 부적, 막걸리, 무당방울, 작두, 복숭아, 맛있는 식혜, 고급 양갱, 고대의 서적, 곶감, 돋보기

• useItem(Item* item, Yokai* target): 아이템 사용
• addItemToInventory(Item* item): 인벤토리 추가

6. 게임 인터페이스
• 시작 메뉴: 새 게임, 이어하기, 게임설정, 순위 통계, 요괴도감, 종료
• 스테이지 메뉴: 싸운다, 부적을 던진다, 동료 요괴를 본다, 도망간다, 인벤토리, 저장하고 메뉴로

7. 게임 진행 방식
• 스테이지 시작→전투→보상→아이템 선택→다음 스테이지
• 9개 일반+1개 보스 스테이지→지역 이동
• 20% 확률 특수 이벤트
• initGame(), initSettings() 등 함수 사용

8. 배틀 시스템
• 턴제, 스피드 우선, 교체/기절/승리/패배 처리
• startBattle(), calculateDamage() 등 함수 사용

9. HP 시스템 (최신화)
• HP 계산 공식: 체력 * (1 + 레벨²/(100 - log₁₀(레벨+1)*7)) * 0.06
• HP가 0이면 기절 상태(YOKAI_FAINTED)로 변경
• HP 바 시각화: 20칸 길이, HP 비율에 따른 색상 변경
  - 20% 이하: 빨간색 (위험)
  - 50% 이하: 노란색 (주의)  
  - 50% 초과: 초록색 (양호)
• calculateHP(const Yokai* yokai): 최대 HP 계산
• printHPBar(const Yokai* yokai): HP 바 출력
• getHPStatus(const Yokai* yokai): HP 상태 확인

10. 데미지 시스템 (최신화)
• 기본 데미지: 공격력 * 기술위력 * (1 + 레벨*1.2)
• 방어력 보정: 방어력 + 100
• 타입 상성 적용: getTypeEffectiveness() 함수 사용
• 타입 일치 보너스(STAB): 기술 타입과 요괴 타입이 같으면 1.5배
• 랜덤 요소: 0.85~1.0 배율 적용
• 최종 데미지: (기본데미지/방어력보정) * 상성 * 0.7 * 랜덤 * 0.05
• 소수점 올림 처리
• 작두 아이템 효과: 플레이어 요괴 공격 시 데미지 10%씩 증가 (최대 5개)
• 돋보기 아이템 효과: 명중률 3%씩 증가
• 찹살경단 자동 발동: HP 20% 이하 시 30% 회복

11. 상성 시스템
• 강: 2배, 약: 0.5배, 일반: 1배
• getTypeEffectiveness(YokaiType moveType, YokaiType defenderType) 함수 사용

12. 보상 시스템
• 전투 승리 시 보상, 아이템 확률 지급
• calculateBattleReward(), itemRewardSystem() 등 함수 사용

13. 스테이지 구성
• 10개 스테이지=1지역, 산/강/바다/논/마을 지형
• 10의 배수=보스, 나머지=일반
• startStage(), moveToNextRegion() 등 함수 사용

14. 입력/출력 시스템
• 텍스트 기반, 출력속도 조절, 타입별 색상

15. 맵 시스템
• 8도 지역, 지도 아이템으로 지역 선택, 미방문 지역 처리

16. 동료 요괴 시스템
• 도깨비 기본, 최대 5마리, addYokaiToParty(), levelUpYokai() 등 함수 사용

17. 평가 시스템
• 도감 완성도, 클리어 횟수, 포획 요괴 수, 클리어 스테이지 수

18. 로그라이트 시스템
• 모든 요괴 HP 0시 데이터 초기화

19. 게임머니 시스템
• 전투 후 전 획득, 보스스테이지 추가 보상, 아이템 보상 새로고침

20. 저장/불러오기
• 5의 배수 자동저장, 수동저장, saveGame(), loadGame() 등 함수 사용

21. 로그 저장
• 입력/출력 로그 기록, 1500줄 넘으면 새 파일 생성

22. 경험치 시스템
• 전투 후 EXP, 레벨업 필요 경험치=100×(레벨)^1.5, 보정계수 적용

23. 기술 시스템
• 레벨업 시 기술 습득/교체, 타입/상성/pp/발버둥 처리

24. 요괴도감 시스템
• 요괴 포획 시 도감 저장, 통계 파일 연동

25. 포획 시스템
• 부적 사용, 확률별 포획

26. 설정 파일 저장 시스템
• 게임 속도/대사 설정 별도 저장, 프로그램 시작시 불러옴

27. 게임구조도 (최신화)
poketghostv2/
├── src/
│   ├── main.c                # 메인 진입점: 시스템 초기화 및 게임 루프 실행
│   ├── game.c                # 게임 상태 관리, initGame 등
│   ├── input.c               # 텍스트 기반 입력 처리
│   ├── text.c                # 텍스트 출력
│   ├── types.c               # 공통 데이터 타입 정의
│   ├── battle.c              # 전투 시스템 (메인 전투 로직)
│   ├── battle_system.c       # 전투 시스템 (데미지 계산, 상성 등)
│   ├── move.c                # 기술 시스템 (기술 로드, 정보 출력)
│   ├── move_learning.c       # 기술 학습 시스템
│   ├── escape.c              # 도망 시스템
│   ├── reward.c              # 보상 시스템
│   ├── yokai.c               # 요괴 시스템 (요괴 로드, 검색)
│   ├── party.c               # 파티 관리
│   ├── stage.c               # 스테이지 관리
│   ├── normal_stage.c        # 일반 스테이지
│   ├── boss_stage.c          # 보스 스테이지
│   ├── region.c              # 지역 관리 시스템
│   ├── item.c                # 아이템 시스템
│   ├── hp_system.c           # HP 시스템 (HP 계산, HP 바 등)
│   ├── heal_system.c         # 회복 시스템
│   ├── exp_system.c          # 경험치 시스템
│   ├── sikhye_system.c       # 식혜 시스템
│   ├── savefile.c            # 저장/불러오기
│   ├── settings.c            # 게임 설정
│   ├── settings_ui.c         # 설정 UI
│   ├── settings_file.c       # 설정 파일 처리
│   ├── menu.c                # 메뉴 시스템
│   ├── main_menu.c           # 메인 메뉴
│   ├── encyclopedia.c        # 요괴도감 시스템
│   ├── statistics.c          # 통계 시스템
│   ├── dialogue.c            # 대화 시스템
│   ├── event_system.c        # 이벤트 시스템
│   ├── logger.c              # 로그 시스템
│   ├── roguelite.c           # 로그라이트 시스템
│   └── exit.c                # 종료 시스템
├── include/
│   ├── main.h                # 메인 함수 헤더
│   ├── game.h                # 게임 상태 관리 헤더
│   ├── input.h               # 입력 처리 헤더
│   ├── text.h                # 텍스트 출력 헤더
│   ├── types.h               # 공통 타입 정의 헤더
│   ├── battle.h              # 전투 시스템 헤더
│   ├── battle_system.h       # 전투 시스템 헤더
│   ├── move.h                # 기술 시스템 헤더
│   ├── move_learning.h       # 기술 학습 헤더
│   ├── escape.h              # 도망 시스템 헤더
│   ├── reward.h              # 보상 시스템 헤더
│   ├── yokai.h               # 요괴 시스템 헤더
│   ├── party.h               # 파티 관리 헤더
│   ├── stage.h               # 스테이지 관리 헤더
│   ├── normal_stage.h        # 일반 스테이지 헤더
│   ├── boss_stage.h          # 보스 스테이지 헤더
│   ├── region.h              # 지역 관리 헤더
│   ├── item.h                # 아이템 시스템 헤더
│   ├── hp_system.h           # HP 시스템 헤더
│   ├── heal_system.h         # 회복 시스템 헤더
│   ├── exp_system.h          # 경험치 시스템 헤더
│   ├── sikhye_system.h       # 식혜 시스템 헤더
│   ├── savefile.h            # 저장/불러오기 헤더
│   ├── settings.h            # 게임 설정 헤더
│   ├── settings_ui.h         # 설정 UI 헤더
│   ├── settings_file.h       # 설정 파일 헤더
│   ├── menu.h                # 메뉴 시스템 헤더
│   ├── main_menu.h           # 메인 메뉴 헤더
│   ├── encyclopedia.h        # 요괴도감 헤더
│   ├── statistics.h          # 통계 시스템 헤더
│   ├── dialogue.h            # 대화 시스템 헤더
│   ├── event_system.h        # 이벤트 시스템 헤더
│   ├── logger.h              # 로그 시스템 헤더
│   ├── roguelite.h           # 로그라이트 헤더
│   ├── exit.h                # 종료 시스템 헤더
│   └── stage_types.h         # 스테이지 타입 정의 헤더
├── data/
│   ├── yokai.txt             # 요괴 데이터 파일
│   ├── move.txt              # 기술 데이터 파일
│   ├── items.txt             # 아이템 데이터 파일
│   ├── dialogues.txt         # 대화 데이터 파일
│   ├── settings.dat          # 설정 데이터 파일
│   └── statistics.dat        # 통계 데이터 파일
├── core/
│   ├── state.c               # 공통 상태 관리
│   └── state.h               # 상태 관리 헤더
├── logs/                     # 로그 파일 저장 디렉터리
├── ranking/                  # 순위 데이터 저장 디렉터리
│   └── ranking.txt           # 순위 데이터 파일
├── 249707751081586610log/    # 플레이어별 로그 디렉터리
├── 249707751145734523log/    # 플레이어별 로그 디렉터리
├── 6948477861141log/         # 플레이어별 로그 디렉터리
├── 정리툴/                   # 데이터 정리 도구 디렉터리
│   ├── check_missing_skills.py
│   ├── compare_skills.py
│   ├── compare_yokai.py
│   ├── format_yokai_data.py
│   ├── skills_sorter.py
│   ├── skills_to_excel.py
│   ├── yokai_sorter.py
│   └── yokai_to_excel.py
├── README.md                 # 프로젝트 설명서
├── 지도.txt                  # 지도 데이터
├── sorted_skills.txt         # 정렬된 기술 데이터
├── 정리된_요괴_데이터.txt     # 정리된 요괴 데이터
├── 기술_도감.xlsx            # 기술 도감 엑셀 파일
├── 요괴_도감.xlsx            # 요괴 도감 엑셀 파일
├── 요괴_비교_결과.xlsx       # 요괴 비교 결과
├── 누락된_기술_목록.xlsx     # 누락된 기술 목록
└── .gitignore                # Git 무시 파일 목록

28. 게임 전체 흐름도 (최신화)

[프로그램 시작]
    ↓
[main() 함수 실행] (src/main.c)
    ↓
[시스템 초기화]
    ├→ system("chcp 65001 > nul") → UTF-8 인코딩 설정
    ├→ srand(time(NULL)) → 랜덤 시드 초기화
    ├→ initLogger() → 로깅 시스템 초기화
    ├→ load_total_statistics() → 통계 데이터 로드
    ├→ initItemSystem() → 아이템 시스템 초기화
    ├→ initHealSystem() → 회복 시스템 초기화
    ├→ initRegionSystem() → 지역 시스템 초기화
    ├→ initDialogueSystem() → 대화 시스템 초기화
    ├→ loadMovesFromFile("data/move.txt") → 기술 데이터 로드
    ├→ loadYokaiFromFile("data/yokai.txt") → 요괴 데이터 로드
    ├→ loadItemsFromFile("data/items.txt") → 아이템 데이터 로드
    ├→ loadDialoguesFromFile("data/dialogues.txt") → 대화 데이터 로드
    └→ initSettings() → 게임 설정 초기화
    ↓
[무한 게임 루프 시작]
    ↓
[initGame() → 게임 상태 초기화]
    ↓
[showMainMenu() → 메인 메뉴 표시] (src/main_menu.c)
    ├→ 1. 새 게임 시작
    │   └→ startNewGame()
    │       ├→ gGameState.isNewGame = 1 설정
    │       ├→ resetItemRewardSystem() → 아이템 보상 시스템 초기화
    │       ├→ init_player_statistics() → 플레이어 통계 초기화
    │       ├→ resetCaughtYokai() → 도감 초기화
    │       ├→ 시작 지역 선택 (경상도/전라도)
    │       ├→ setInitialRegion() → 초기 지역 설정
    │       ├→ initGame() → 게임 상태 초기화
    │       ├→ 낡은 부적 5개 지급
    │       ├→ initStage(&gStage, 1) → 첫 번째 스테이지 초기화
    │       ├→ initParty() → 파티 초기화
    │       ├→ startDialogue(1) → 환영 대화 표시
    │       └→ 게임 시작 메시지 출력
    │
    ├→ 2. 이어하기
    │   └→ loadGame() (src/savefile.c)
    │       ├→ 저장 파일 존재 확인
    │       ├→ 게임 상태 로드
    │       ├→ 파티 정보 로드
    │       ├→ 인벤토리 로드
    │       ├→ 스테이지 정보 로드
    │       └→ gGameState.isLoadedGame = 1 설정
    │
    ├→ 3. 게임 설정
    │   └→ showSettings() → showSettingsMenu() (src/settings_ui.c)
    │       ├→ 게임 속도 설정
    │       ├→ 대사 설정
    │       ├→ 출력 방식 선택
    │       ├→ 디버그 모드 온/오프
    │       └→ 상성 힌트 온/오프
    │
    ├→ 4. 통계
    │   └→ display_statistics_screen() (src/statistics.c)
    │       ├→ 플레이어 통계 표시
    │       ├→ 전체 통계 표시
    │       └→ 순위 정보 표시
    │
    ├→ 5. 요괴 도감
    │   └→ showEncyclopedia() (src/encyclopedia.c)
    │       ├→ 포획한 요괴 목록 표시
    │       ├→ 요괴 상세 정보 표시
    │       └→ 도감 완성도 표시
    │
    ├→ 6. 로그 보내기
    │   └→ sendLogsMenu() → 로그 파일 전송 기능
    │
    ├→ 7. 순위를 본다
    │   └→ showRankingMenu() → 순위 비교 기능
    │
    └→ 8. 종료
        └→ exitGame() → 프로그램 종료
    ↓
[게임 시작 후 스테이지 진행]
    ↓
[initStage() → 스테이지 초기화] (src/stage.c)
    ├→ 스테이지 번호에 따른 분기
    │   ├→ 81~90: 파이널 스테이지 (백두산)
    │   │   ├→ 90스테이지: 최종보스 두억시니
    │   │   └→ 81~89: 패러독스 요괴
    │   ├→ 10의 배수: 보스 스테이지
    │   └→ 그 외: 일반 스테이지
    ├→ 지형 설정 (산/강/바다/논/마을)
    ├→ 적 요괴 생성
    ├→ 레벨 범위 계산
    └→ 시간 설정
    ↓
[showStageInfo() → 스테이지 정보 표시]
    ├→ 스테이지 번호
    ├→ 지역명
    ├→ 지형명
    ├→ 현재 시간
    └→ 보유 전
    ↓
[showBattleInterface() → 전투 인터페이스 표시]
    ↓
[showBattleMenu() → 전투 메뉴 표시] (src/battle.c)
    ├→ 1. 싸운다
    │   └→ selectPartyYokai() → 동료 요괴 선택
    │       └→ selectMove() → 기술 선택
    │           └→ executeBattle() → 전투 실행 (src/battle_system.c)
    │               ├→ PP 감소
    │               ├→ 기술 사용 메시지 출력
    │               ├→ 명중률 계산 (돋보기 효과 포함)
    │               ├→ 명중 판정
    │               ├→ calculateDamage() → 데미지 계산
    │               │   ├→ 기본 데미지 계산
    │               │   ├→ 방어력 보정
    │               │   ├→ 타입 상성 적용
    │               │   ├→ 타입 일치 보너스(STAB)
    │               │   ├→ 작두 아이템 효과
    │               │   ├→ 랜덤 요소 적용
    │               │   └→ 최종 데미지 계산
    │               ├→ 데미지 적용
    │               ├→ 찹살경단 자동 발동 체크
    │               ├→ 데미지 메시지 출력
    │               ├→ 상성 메시지 출력
    │               └→ HP 바 업데이트
    │
    ├→ 2. 부적을 던진다
    │   └→ selectTalismanFromInventory() → 부적 선택
    │       └→ useTalisman() → 부적 사용 (src/item.c)
    │           ├→ 부적 등급별 포획 확률 계산
    │           ├→ 포획 성공/실패 판정
    │           ├→ 포획 성공 시 addYokaiToParty() → 파티 추가
    │           └→ 포획 실패 시 메시지 출력
    │
    ├→ 3. 동료 요괴를 본다
    │   └→ printParty() → 파티 정보 표시
    │
    ├→ 4. 도망간다
    │   └→ tryToEscape() → 도망 시도 (src/escape.c)
    │       ├→ 50% 확률로 도망 성공
    │       ├→ 성공 시 다음 스테이지로 이동
    │       └→ 실패 시 전투 계속
    │
    ├→ 5. 인벤토리를 본다
    │   └→ printInventory() → 인벤토리 표시
    │
    └→ 6. 저장하고 메뉴로
        └→ saveGame() → 게임 저장 (src/savefile.c)
    ↓
[전투 결과 처리]
    ├→ 승리 (101)
    │   ├→ calculateBattleReward() → 보상 계산 (src/reward.c)
    │   ├→ itemRewardSystem() → 아이템 보상 (src/reward.c)
    │   ├→ 경험치 분배 (src/exp_system.c)
    │   ├→ levelUpYokai() → 레벨업 처리 (src/party.c)
    │   └→ nextStage() → 다음 스테이지로 이동
    │
    ├→ 포획 성공 (102)
    │   ├→ 요괴 도감에 추가
    │   ├→ 통계 업데이트
    │   └→ nextStage() → 다음 스테이지로 이동
    │
    ├→ 도망 성공 (103)
    │   └→ nextStage() → 다음 스테이지로 이동
    │
    └→ 패배 (104)
        └→ handleRogueliteSystem() → 로그라이트 시스템 (src/roguelite.c)
            ├→ 게임 오버 메시지 출력
            ├→ 통계 저장
            ├→ 게임 데이터 초기화
            └→ 메인 메뉴로 복귀
    ↓
[nextStage() → 다음 스테이지 처리] (src/stage.c)
    ├→ 스테이지 번호 증가
    ├→ 클리어한 스테이지 수 증가
    ├→ 턴 카운트 초기화
    ├→ 시간 증가 (24시간 주기)
    ├→ 10스테이지마다 지역 변경
    │   ├→ 지도 아이템 보유 시: moveToNextRegionWithMap()
    │   └→ 지도 아이템 없을 시: moveToNextRegion()
    ├→ 81스테이지부터 파이널 스테이지 진입
    ├→ 5의 배수 스테이지 완료 시 자동 저장
    └→ 새로운 스테이지 초기화
    ↓
[지역 변경 처리] (src/region.c)
    ├→ 현재 지역 확인
    ├→ 인접 지역 확인
    ├→ 미방문 지역 우선 이동
    ├→ 모든 지역 방문 완료 시 함경도 이동 가능
    └→ 지역별 특수 효과 적용
    ↓
[특수 이벤트 처리] (src/event_system.c)
    ├→ 20% 확률로 특수 이벤트 발생
    ├→ 우물신과의 조우
    ├→ 배달 알바
    ├→ 점성술사와 조우
    └→ 이벤트 보상 지급
    ↓
[게임 클리어 체크]
    ├→ 90스테이지 클리어 시
    │   ├→ 최종보스 두억시니 봉인
    │   ├→ 엔딩 표시
    │   ├→ 통계 저장
    │   └→ 메인 메뉴로 복귀
    │
    └→ 게임 계속 진행
        └→ 다음 스테이지로 이동
    ↓
[게임 종료]
    ├→ cleanupHealSystem() → 회복 시스템 정리
    ├→ cleanupItemSystem() → 아이템 시스템 정리
    ├→ cleanupDialogueSystem() → 대화 시스템 정리
    ├→ cleanupLogger() → 로거 정리
    └→ 프로그램 종료

29. 팀원별 코드 할당표 (최신화)
- 이상엽: core, battle, battle_system, main, game, input, text, types, move, escape, reward, hp_system 등
- 이연준 오메가: yokai, party, savefile, settings
- 이현준 알파: stage, normal_stage, boss_stage, settings_file, menu, main_menu
- 이현수: item, settings_ui 